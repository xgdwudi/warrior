<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.web.mapper.mapper02.FriendsDao">

    <resultMap type="com.study.common.entity.Friends" id="FriendsMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="pid" column="pid" jdbcType="INTEGER"/>
        <result property="fpid" column="fpid" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="stime" column="stime" jdbcType="TIMESTAMP"/>
        <result property="ttime" column="ttime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap type="com.study.common.entity.LTXX" id="FriendsMaps">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <collection property="friends" ofType="com.study.common.entity.Friends">
            <result property="id" column="id" jdbcType="VARCHAR"/>
            <result property="pid" column="pid" jdbcType="INTEGER"/>
            <result property="fpid" column="fpid" jdbcType="INTEGER"/>
            <result property="status" column="status" jdbcType="VARCHAR"/>
            <result property="stime" column="stime" jdbcType="TIMESTAMP"/>
            <result property="ttime" column="ttime" jdbcType="TIMESTAMP"/>
            <result property="name" column="name1" jdbcType="VARCHAR"/>
            <collection property="info" ofType="com.study.common.entity.Info">
                <result property="id" column="id" jdbcType="VARCHAR"/>
                <result property="spid" column="spid" jdbcType="INTEGER"/>
                <result property="rpid" column="rpid" jdbcType="INTEGER"/>
                <result property="context" column="context" jdbcType="VARCHAR"/>
                <result property="time" column="time" jdbcType="TIMESTAMP"/>
                <result property="isone" column="isone" jdbcType="BOOLEAN"/>
            </collection>
        </collection>

    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="FriendsMap">
        select
          id, pid, fpid, status, stime, ttime
        from demo.friends
        where id = #{id}
    </select>

<!--    查询所有信息-->
    <select id="selectbyid" resultMap="FriendsMaps">
       SELECT USER.*, friends.*, info.*,( SELECT NAME FROM USER WHERE id = friends.fpid ) name1,
        CASE
            WHEN USER.id = info.spid THEN
            TRUE ELSE FALSE
            END isone

        FROM
            USER LEFT JOIN friends ON friends.pid = USER.id
            left JOIN info ON ( info.rpid = friends.fpid AND USER.id = info.spid )
            OR ( friends.fpid = info.spid AND USER.id = info.rpid )
        WHERE
            friends.`status` = 1
            AND USER.id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="FriendsMap">
        select
          id, pid, fpid, status, stime, ttime
        from demo.friends
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="FriendsMap">
        select
        id, pid, fpid, status, stime, ttime
        from demo.friends
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="pid != null">
                and pid = #{pid}
            </if>
            <if test="fpid != null">
                and fpid = #{fpid}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="stime != null">
                and stime = #{stime}
            </if>
            <if test="ttime != null">
                and ttime = #{ttime}
            </if>
        </where>
    </select>


    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into demo.friends(pid, fpid, status, stime, ttime)
        values (#{pid}, #{fpid}, #{status}, #{stime}, #{ttime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into demo.friends(pid, fpid, status, stime, ttime)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.pid}, #{entity.fpid}, #{entity.status}, #{entity.stime}, #{entity.ttime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into demo.friends(pid, fpid, status, stime, ttime)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.pid}, #{entity.fpid}, #{entity.status}, #{entity.stime}, #{entity.ttime})
        </foreach>
        on duplicate key update
        pid = values(pid) , fpid = values(fpid) , status = values(status) , stime = values(stime) , ttime =
        values(ttime)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update demo.friends
        <set>
            <if test="pid != null">
                pid = #{pid},
            </if>
            <if test="fpid != null">
                fpid = #{fpid},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="stime != null">
                stime = #{stime},
            </if>
            <if test="ttime != null">
                ttime = #{ttime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from demo.friends where id = #{id}
    </delete>

</mapper>

